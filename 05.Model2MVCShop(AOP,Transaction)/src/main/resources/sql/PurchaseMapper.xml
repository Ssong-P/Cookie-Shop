<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="PurchaseMapper">
 	
 	
	<resultMap id="purchaseSelectMap" type="purchase">
		<result property="buyer.userId" 			column="buyer_id" 			jdbcType="VARCHAR"/>
		<result property="dlvyAddr"					column="demailaddr" 		jdbcType="VARCHAR" />
		<result property="dlvyDate" 				column="dlvy_date" 			jdbcType="DATE" />
		<result property="dlvyRequest" 				column="dlvy_request" 		jdbcType="VARCHAR" />
		<result property="orderDate" 				column="order_data" 		jdbcType="DATE" />
		<result property="paymentOption" 			column="payment_option" 	jdbcType="VARCHAR" />
		<result property="purchaseProd.prodNo" 		column="prod_no" 			jdbcType="NUMERIC" />
		<result property="receiverName" 			column="RECEIVER_NAME" 		jdbcType="VARCHAR" />
		<result property="receiverPhone" 			column="RECEIVER_PHONE" 	jdbcType="VARCHAR" />
		<result property="tranCode" 				column="TRAN_STATUS_CODE" 	jdbcType="VARCHAR" />
		<result property="tranNo" 					column="TRAN_NO" 			jdbcType="NUMERIC" />
	
		<association property="purchaseProd"  javaType="product">
			<id property="prodNo" column="prod_no" jdbcType="NUMERIC"/>
		</association>
		
		<association property="buyer"  javaType="user">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR"/>
		</association>
	
	</resultMap>
	
	
	<!-- SQL : INSERT -->
	<insert 	id="addPurchase"		parameterType="purchase" >
	 	INSERT
		INTO transaction ( buyer_id , demailaddr , dlvy_date , dlvy_request , order_data , 
						payment_option, prod_no, RECEIVER_NAME, RECEIVER_PHONE, TRAN_STATUS_CODE, TRAN_NO) 
		VALUES	 (	#{buyer.userId:VARCHAR} , 
					#{dlvyAddr:VARCHAR} , 
					#{dlvyDate:DATE} , 
					#{dlvyRequest:VARCHAR} , 
					SYSDATE , 
					#{paymentOption:VARCHAR} , 
					#{purchaseProd.prodNo:NUMERIC} , 
					#{receiverName:VARCHAR} , 
					#{receiverPhone:VARCHAR} , 
					#{tranCode:VARCHAR} , 
					seq_transaction_tran_no.nextval )

	 </insert>
	 
	 
	 <!-- SQL : SELECT ONE : tran_no -->
	 <select 	id="getPurchase"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		buyer_id , demailaddr , dlvy_date , dlvy_request , order_data , 
		payment_option, prod_no, RECEIVER_NAME, RECEIVER_PHONE, TRAN_STATUS_CODE, TRAN_NO		
		FROM transaction
		WHERE tran_no = #{value}
	 </select>
	 
	 
	 <!-- SQL : SELECT ONE : prod_no -->
	 <select 	id="getPurchase2"	parameterType="int"	resultMap="purchaseSelectMap">
		SELECT
		buyer_id , demailaddr , dlvy_date , dlvy_request , order_data , 
		payment_option, prod_no, RECEIVER_NAME, RECEIVER_PHONE, TRAN_STATUS_CODE, TRAN_NO
		FROM transaction
		WHERE prod_no = #{value}
	 </select>
	 
	 
	 <!-- SQL : UPDATE : purhcase-->
	 <update	id="updatePurchase"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		PAYMENT_OPTION 			= #{paymentOption} ,
			RECEIVER_NAME			= #{receiverName} ,
			RECEIVER_PHONE 			= #{receiverPhone} ,
			DEMAILADDR				= #{dlvyAddr} ,
			DLVY_REQUEST			= #{dlvyRequest} ,
			dlvy_date		 		= #{dlvyDate}
	   	</set>
	   	WHERE tran_no = #{tranNo}
	 </update>
	 
	 
	 <!-- SQL : UPDATE : tran_code -->
	 <update	id="updateTranCode"	parameterType="purchase" >
	   	UPDATE transaction
	   	<set>
	   		PAYMENT_OPTION 			= #{paymentOption} ,
			RECEIVER_NAME			= #{receiverName} ,
			RECEIVER_PHONE 			= #{receiverPhone} ,
			DEMAILADDR				= #{dlvyAddr} ,
			DLVY_REQUEST			= #{dlvyRequest} ,
			DLVY_DATE		 		= #{dlvyDate}
	   	</set>
	   	WHERE prod_no = #{purchaseProd.prodNo}
	 </update>
		 
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getPurchaseList"  parameterType="map"	resultMap="purchaseSelectMap">
	  	SELECT *
			FROM (SELECT inner_table.* , ROWNUM AS row_seq
				FROM (SELECT prod_no , tran_no , buyer_id, payment_option, receiver_name, receiver_phone, demailaddr, dlvy_request, tran_status_code, order_data, dlvy_date
					FROM transaction
						WHERE buyer_id = #{buyerId}
							ORDER BY prod_no ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no , prod_name , price, reg_date
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_name = #{searchKeyword}
								</if>
								<if test="searchCondition == 2 and searchKeyword !='' ">
						 			price = #{searchKeyword}
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>